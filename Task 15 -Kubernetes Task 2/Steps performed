I have perfomered below steps:

Step - 1 : Create EKS Management Host in AWS
  Launch new Ubuntu VM using AWS Ec2 ( t2.micro )
  Connect to machine and install kubectl using below commands
    curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin
    kubectl version --short --client
  Install AWS CLI latest version using below commands
    sudo apt install unzip
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    sudo ./aws/install
    aws --version
  Install eksctl using below commands
    curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
    sudo mv /tmp/eksctl /usr/local/bin
    eksctl version
Step - 2 : Create IAM role & attach to EKS Management Host
  Create New Role using IAM service ( Select Usecase - ec2 )
  Add below permissions for the role
  Administrator - acces
    Enter Role Name (eksroleec2)
  Attach created role to EKS Management Host (Select EC2 => Click on Security => Modify IAM Role => attach IAM role we have created)

Step - 3 : Create EKS Cluster using eksctl
Syntax:
    eksctl create cluster --name cluster-name
      --region region-name
      --node-type instance-type
      --nodes-min 2
      --nodes-max 2 \ --zones ,

N. Virgina:
eksctl create cluster --name ashokit-cluster4 --region us-east-1 --node-type t2.medium  --zones us-east-1a,us-east-1b

If you want to create it in Mumbai region 
Mumbai:
eksctl create cluster --name ashokit-cluster4 --region ap-south-1 --node-type t2.medium  --zones ap-south-1a,ap-south-1b

Note: Cluster creation will take 5 to 10 mins of time (we have to wait). After cluster created we can check nodes using below command.
kubectl get nodes  ( Choose any one region and perform only one command )

Note: We should be able to see EKS cluster nodes here.**

We are done with our Setup

Step - 4 : After your practise, delete Cluster and other resources we have used in AWS Cloud to avoid billing
  eksctl delete cluster --name ashokit-cluster4 --region ap-south-1



Now we have done with EKS cluster, now we deploy one Nginx app

create nginx-deployment.yaml  (touch nginx-deployment.yaml) ( vi nginx-deployment.yaml)
create nginx-service.yaml  (touch nginx-service.yaml) ( vi nginx-service.yaml )


dceployment.yaml 
# nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

nginx-service.yaml

# nginx-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80

Apply it:
  kubectl apply -f nginx-deployment.yaml

Apply it:
  kubectl apply -f nginx-service.yaml

Get the External URL
kubectl get svc nginx-service

Look for the EXTERNAL-IP in the output. It might take a few minutes to be assigned.


Now access it via ( http://<EXTERNAL-IP> ) 





